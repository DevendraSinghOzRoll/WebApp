Imports Microsoft.VisualBasic
Imports System.Data.SqlClient

Public Class ExtraProductDAO

    ''' <summary>
    ''' Gets the extra product from the database.
    ''' </summary>
    ''' <returns>A <see cref="DataTable"/>.</returns>
    Public Function GetExtraProductsDataTable() As DataTable

        Dim dbConn As New DBConnection
        Dim cnn As SqlConnection = dbConn.getSQLConnection_To_OzRollPlantationScheduling
        Dim cmd As New SqlCommand
        Dim adp As New SqlDataAdapter
        Dim dt As New DataTable

        Try
            cnn.Open()
            cmd.Connection = cnn
            cmd.CommandText = "sp_getExtraProducts"
            cmd.CommandType = CommandType.StoredProcedure
            SqlCommandBuilder.DeriveParameters(cmd)

            adp.SelectCommand = cmd
            adp.Fill(dt)

        Catch ex As Exception
            EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & ex.Message & Environment.NewLine)
        Finally
            adp.Dispose()
            adp = Nothing
            cmd.Dispose()
            cmd = Nothing
            cnn.Close()
            cnn.Dispose()
            cnn = Nothing
        End Try

        Return dt

    End Function

    ''' <summary>
    ''' Gets the louvre extra product from the database.
    ''' </summary>
    ''' <returns>A <see cref="List(Of ExtraProduct)"/>.</returns>
    Public Function GetExtraProductsList() As List(Of ExtraProduct)
        Dim dt As DataTable = GetExtraProductsDataTable()
        Dim extraProds As List(Of ExtraProduct) = ConvertExtraProductDataTableToList(dt)

        Return extraProds
    End Function

    Public Function ConvertExtraProductDataTableToList(dtExtraProducts As DataTable) As List(Of ExtraProduct)
        Dim lExtraProducts As List(Of ExtraProduct) = New List(Of ExtraProduct)

        For Each r As DataRow In dtExtraProducts.Rows
            Dim cExtraProduct As ExtraProduct = ConvertExtraProductRecordToObject(r)

            lExtraProducts.Add(cExtraProduct)
        Next

        Return lExtraProducts
    End Function

    Private Function ConvertExtraProductRecordToObject(cExtraProduct As DataRow) As ExtraProduct
        Dim cExtra As New ExtraProduct

        With cExtra
            .ExtraProductID = cExtraProduct("ExtraProductID")

            If Not IsDBNull(cExtraProduct("Description")) Then
                .Description = cExtraProduct("Description")
            End If

            If Not IsDBNull(cExtraProduct("Discontinued")) Then
                .Discontinued = cExtraProduct("Discontinued")
            End If

            If Not IsDBNull(cExtraProduct("ExtraProductID")) Then
                .ExtraProductID = cExtraProduct("ExtraProductID")
            End If

            If Not IsDBNull(cExtraProduct("PageVisibility")) Then
                .PageVisibility = cExtraProduct("PageVisibility")
            End If

            If Not IsDBNull(cExtraProduct("ProductCode")) Then
                .ProductCode = cExtraProduct("ProductCode")
            End If

            If Not IsDBNull(cExtraProduct("SortOrder")) Then
                .SortOrder = cExtraProduct("SortOrder")
            End If

            If Not IsDBNull(cExtraProduct("UnitOfMeasurement")) Then
                .UnitOfMeasurement = cExtraProduct("UnitOfMeasurement")
            End If
        End With

        Return cExtra
    End Function

End Class
