Imports System.Data.SqlClient
Imports System.Reflection
Imports Microsoft.VisualBasic

Public Class LouvreSpecDesignDAO
    Function addLouvreSpecDesign(louvreDesign As LouvreSpecDesign, Optional cnn As SqlConnection = Nothing, Optional ByRef trans As SqlTransaction = Nothing) As Integer

        Dim bolAddOK As Boolean = True
        Dim SaveRecord As Boolean = False
        If IsNothing(cnn) Then
            bolAddOK = False
            Dim dbConn As New DBConnection
            cnn = dbConn.getSQLConnection_To_OzRollPlantationScheduling
            dbConn = Nothing
        End If

        Dim cmd As New SqlCommand
        Try

            If bolAddOK = False Then
                cnn.Open()
            End If

            cmd.Connection = cnn
            cmd.CommandText = "sp_addLouvreSpecDesign"
            cmd.CommandType = CommandType.StoredProcedure

            If bolAddOK = True Then
                cmd.Transaction = trans
            End If

            setupCommandParameters(louvreDesign, cmd)
            Dim ra As Integer = cmd.ExecuteNonQuery
            If ra < 1 Then
                EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - add record failed" & Environment.NewLine)
                bolAddOK = False
            Else
                SaveRecord = True
            End If
            If bolAddOK = False Then
                cnn.Close()
            End If

        Catch ex As Exception
            EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & ex.Message & Environment.NewLine)
            bolAddOK = False
        Finally
            cmd.Dispose()
            cmd = Nothing
            If bolAddOK = False Then
                cnn.Dispose()
                cnn = Nothing
            End If
        End Try
        Return SaveRecord
        ''

    End Function

    Function updateLouvreSpecDesign(louvreDesign As LouvreSpecDesign, Optional cnn As SqlConnection = Nothing, Optional ByRef trans As SqlTransaction = Nothing) As Boolean

        Dim bolAddOK As Boolean = True

        If IsNothing(cnn) Then
            bolAddOK = False
            Dim dbConn As New DBConnection
            cnn = dbConn.getSQLConnection_To_OzRollPlantationScheduling
            dbConn = Nothing
        End If

        Dim cmd As New SqlCommand
        Try

            If bolAddOK = False Then
                cnn.Open()
            End If

            cmd.Connection = cnn
            cmd.CommandText = "sp_updateLouvreSpecDesign"
            cmd.CommandType = CommandType.StoredProcedure

            If bolAddOK = True Then
                cmd.Transaction = trans
            End If

            setupCommandParameters(louvreDesign, cmd)
            Dim ra As Integer = cmd.ExecuteNonQuery

            If bolAddOK = False Then
                cnn.Close()
            End If

            If ra < 1 Then
                EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - add record failed" & Environment.NewLine)
                Return False
            Else
                Return True
            End If

        Catch ex As Exception
            EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & ex.Message & Environment.NewLine)
            Return False
        Finally
            cmd.Dispose()
            cmd = Nothing
            If bolAddOK = False Then
                cnn.Dispose()
                cnn = Nothing
            End If
        End Try

    End Function

    Protected Sub setupCommandParameters(LouvreSpec As LouvreSpecDesign, ByRef cmd As SqlCommand)

        If LouvreSpec.LouvreDetailsID <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@LouvreDetailsID").Value = LouvreSpec.LouvreDetailsID
        Else
            cmd.Parameters("@LouvreDetailsID").Value = DBNull.Value
        End If

        If LouvreSpec.OpeningHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@OpeningHeight").Value = LouvreSpec.OpeningHeight
        Else
            cmd.Parameters("@OpeningHeight").Value = DBNull.Value
        End If

        If LouvreSpec.OpeningWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@OpeningWidth").Value = LouvreSpec.OpeningWidth
        Else
            cmd.Parameters("@OpeningWidth").Value = DBNull.Value
        End If

        If LouvreSpec.PanelHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PanelHeight").Value = LouvreSpec.PanelHeight
        Else
            cmd.Parameters("@PanelHeight").Value = DBNull.Value
        End If

        If LouvreSpec.PanelWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PanelWidth").Value = LouvreSpec.PanelWidth
        Else
            cmd.Parameters("@PanelWidth").Value = DBNull.Value
        End If

        If LouvreSpec.NoOfPanels <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@NoOfPanels").Value = LouvreSpec.NoOfPanels
        Else
            cmd.Parameters("@NoOfPanels").Value = DBNull.Value
        End If

        If LouvreSpec.WeightPersSQM <> Constants.DEFAULT_DECIMAL_VALUE Then
            cmd.Parameters("@WeightPersSQM").Value = LouvreSpec.WeightPersSQM
        Else
            cmd.Parameters("@WeightPersSQM").Value = DBNull.Value
        End If

        If LouvreSpec.TopTrackHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopTrackHeight").Value = LouvreSpec.TopTrackHeight
        Else
            cmd.Parameters("@TopTrackHeight").Value = DBNull.Value
        End If

        If LouvreSpec.TopGapHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopGapHeight").Value = LouvreSpec.TopGapHeight
        Else
            cmd.Parameters("@TopGapHeight").Value = DBNull.Value
        End If

        If LouvreSpec.BottomTrackHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomTrackHeight").Value = LouvreSpec.BottomTrackHeight
        Else
            cmd.Parameters("@BottomTrackHeight").Value = DBNull.Value
        End If

        If LouvreSpec.BottomGapHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomGapHeight").Value = LouvreSpec.BottomGapHeight
        Else
            cmd.Parameters("@BottomGapHeight").Value = DBNull.Value
        End If

        If LouvreSpec.LeftSideGap <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@LeftSideGap").Value = LouvreSpec.LeftSideGap
        Else
            cmd.Parameters("@LeftSideGap").Value = DBNull.Value
        End If

        If LouvreSpec.RightSideGap <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@RightSideGap").Value = LouvreSpec.RightSideGap
        Else
            cmd.Parameters("@RightSideGap").Value = DBNull.Value
        End If

        If LouvreSpec.PanelGap <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PanelGap").Value = LouvreSpec.PanelGap
        Else
            cmd.Parameters("@PanelGap").Value = DBNull.Value
        End If

        If LouvreSpec.PanelGapOverlap <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PanelGapOverlap").Value = LouvreSpec.PanelGapOverlap
        Else
            cmd.Parameters("@PanelGapOverlap").Value = DBNull.Value
        End If

        If LouvreSpec.NoOfClips <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@NoOfClips").Value = LouvreSpec.NoOfClips
        Else
            cmd.Parameters("@NoOfClips").Value = DBNull.Value
        End If

        If LouvreSpec.NoOfTransom <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@NoOfTransom").Value = LouvreSpec.NoOfTransom
        Else
            cmd.Parameters("@NoOfTransom").Value = DBNull.Value
        End If

        If LouvreSpec.GivenTransomHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@GivenTransomHeight").Value = LouvreSpec.GivenTransomHeight
        Else
            cmd.Parameters("@GivenTransomHeight").Value = DBNull.Value
        End If

        If LouvreSpec.PanelTransomHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PanelTransomHeight").Value = LouvreSpec.PanelTransomHeight
        Else
            cmd.Parameters("@PanelTransomHeight").Value = DBNull.Value
        End If

        If LouvreSpec.TransomSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TransomSize").Value = LouvreSpec.TransomSize
        Else
            cmd.Parameters("@TransomSize").Value = DBNull.Value
        End If

        If LouvreSpec.TransomWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TransomWidthSubtraction").Value = LouvreSpec.TransomWidthSubtraction
        Else
            cmd.Parameters("@TransomWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.TransomWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TransomWidth").Value = LouvreSpec.TransomWidth
        Else
            cmd.Parameters("@TransomWidth").Value = DBNull.Value
        End If

        If LouvreSpec.GivenTransom2Height <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@GivenTransom2Height").Value = LouvreSpec.GivenTransom2Height
        Else
            cmd.Parameters("@GivenTransom2Height").Value = DBNull.Value
        End If

        If LouvreSpec.PanelTransom2Height <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PanelTransom2Height").Value = LouvreSpec.PanelTransom2Height
        Else
            cmd.Parameters("@PanelTransom2Height").Value = DBNull.Value
        End If

        If LouvreSpec.Transom2Size <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@Transom2Size").Value = LouvreSpec.Transom2Size
        Else
            cmd.Parameters("@Transom2Size").Value = DBNull.Value
        End If

        If LouvreSpec.Transom2WidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@Transom2WidthSubtraction").Value = LouvreSpec.Transom2WidthSubtraction
        Else
            cmd.Parameters("@Transom2WidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.Transom2Width <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@Transom2Width").Value = LouvreSpec.Transom2Width
        Else
            cmd.Parameters("@Transom2Width").Value = DBNull.Value
        End If

        If LouvreSpec.MiddlePanelSectionHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddlePanelSectionHeight").Value = LouvreSpec.MiddlePanelSectionHeight
        Else
            cmd.Parameters("@MiddlePanelSectionHeight").Value = DBNull.Value
        End If

        If LouvreSpec.BottomPanelSectionHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomPanelSectionHeight").Value = LouvreSpec.BottomPanelSectionHeight
        Else
            cmd.Parameters("@BottomPanelSectionHeight").Value = DBNull.Value
        End If

        If LouvreSpec.CornerPlugHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@CornerPlugHeight").Value = LouvreSpec.CornerPlugHeight
        Else
            cmd.Parameters("@CornerPlugHeight").Value = DBNull.Value
        End If

        If LouvreSpec.NoOfCornerPlugs <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@NoOfCornerPlugs").Value = LouvreSpec.NoOfCornerPlugs
        Else
            cmd.Parameters("@NoOfCornerPlugs").Value = DBNull.Value
        End If

        If LouvreSpec.NoOfHoleCaps <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@NoOfHoleCaps").Value = LouvreSpec.NoOfHoleCaps
        Else
            cmd.Parameters("@NoOfHoleCaps").Value = DBNull.Value
        End If

        If LouvreSpec.PileQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PileQuantity").Value = LouvreSpec.PileQuantity
        Else
            cmd.Parameters("@PileQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.PileColour <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PileColour").Value = LouvreSpec.PileColour
        Else
            cmd.Parameters("@PileColour").Value = DBNull.Value
        End If

        If LouvreSpec.BladeLockQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BladeLockQuantity").Value = LouvreSpec.BladeLockQuantity
        Else
            cmd.Parameters("@BladeLockQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.TopFlushBoltsType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopFlushBoltsType").Value = LouvreSpec.TopFlushBoltsType
        Else
            cmd.Parameters("@TopFlushBoltsType").Value = DBNull.Value
        End If

        If LouvreSpec.TopFlushBoltsHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopFlushBoltsHeight").Value = LouvreSpec.TopFlushBoltsHeight
        Else
            cmd.Parameters("@TopFlushBoltsHeight").Value = DBNull.Value
        End If

        If LouvreSpec.TopFlushBoltsQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopFlushBoltsQuantity").Value = LouvreSpec.TopFlushBoltsQuantity
        Else
            cmd.Parameters("@TopFlushBoltsQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.BottomFlushBoltsType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomFlushBoltsType").Value = LouvreSpec.BottomFlushBoltsType
        Else
            cmd.Parameters("@BottomFlushBoltsType").Value = DBNull.Value
        End If

        If LouvreSpec.BottomFlushBoltsHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomFlushBoltsHeight").Value = LouvreSpec.BottomFlushBoltsHeight
        Else
            cmd.Parameters("@BottomFlushBoltsHeight").Value = DBNull.Value
        End If

        If LouvreSpec.BottomFlushBoltsQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomFlushBoltsQuantity").Value = LouvreSpec.BottomFlushBoltsQuantity
        Else
            cmd.Parameters("@BottomFlushBoltsQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.HingesType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@HingesType").Value = LouvreSpec.HingesType
        Else
            cmd.Parameters("@HingesType").Value = DBNull.Value
        End If

        If LouvreSpec.HingesQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@HingesQuantity").Value = LouvreSpec.HingesQuantity
        Else
            cmd.Parameters("@HingesQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.FeltTop <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltTop").Value = LouvreSpec.FeltTop
        Else
            cmd.Parameters("@FeltTop").Value = DBNull.Value
        End If

        If LouvreSpec.FeltSizeTop <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltSizeTop").Value = LouvreSpec.FeltSizeTop
        Else
            cmd.Parameters("@FeltSizeTop").Value = DBNull.Value
        End If

        If LouvreSpec.FeltBottom <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltBottom").Value = LouvreSpec.FeltBottom
        Else
            cmd.Parameters("@FeltBottom").Value = DBNull.Value
        End If

        If LouvreSpec.FeltSizeBottom <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltSizeBottom").Value = LouvreSpec.FeltSizeBottom
        Else
            cmd.Parameters("@FeltSizeBottom").Value = DBNull.Value
        End If

        If LouvreSpec.FeltLeft <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltLeft").Value = LouvreSpec.FeltLeft
        Else
            cmd.Parameters("@FeltLeft").Value = DBNull.Value
        End If

        If LouvreSpec.FeltSizeLeft <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltSizeLeft").Value = LouvreSpec.FeltSizeLeft
        Else
            cmd.Parameters("@FeltSizeLeft").Value = DBNull.Value
        End If

        If LouvreSpec.FeltRight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltRight").Value = LouvreSpec.FeltRight
        Else
            cmd.Parameters("@FeltRight").Value = DBNull.Value
        End If

        If LouvreSpec.FeltSizeRight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltSizeRight").Value = LouvreSpec.FeltSizeRight
        Else
            cmd.Parameters("@FeltSizeRight").Value = DBNull.Value
        End If

        If LouvreSpec.FeltInBetweenPanels <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltInBetweenPanels").Value = LouvreSpec.FeltInBetweenPanels
        Else
            cmd.Parameters("@FeltInBetweenPanels").Value = DBNull.Value
        End If

        If LouvreSpec.FeltSizeInBetweenPanels <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FeltSizeInBetweenPanels").Value = LouvreSpec.FeltSizeInBetweenPanels
        Else
            cmd.Parameters("@FeltSizeInBetweenPanels").Value = DBNull.Value
        End If

        If LouvreSpec.TopPivotsQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopPivotsQuantity").Value = LouvreSpec.TopPivotsQuantity
        Else
            cmd.Parameters("@TopPivotsQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.TopPivotsType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopPivotsType").Value = LouvreSpec.TopPivotsType
        Else
            cmd.Parameters("@TopPivotsType").Value = DBNull.Value
        End If

        If LouvreSpec.TopPivotsPerPanel <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopPivotsPerPanel").Value = LouvreSpec.TopPivotsPerPanel
        Else
            cmd.Parameters("@TopPivotsPerPanel").Value = DBNull.Value
        End If

        If LouvreSpec.BottomPivotsQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomPivotsQuantity").Value = LouvreSpec.BottomPivotsQuantity
        Else
            cmd.Parameters("@BottomPivotsQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.BottomPivotsType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomPivotsType").Value = LouvreSpec.BottomPivotsType
        Else
            cmd.Parameters("@BottomPivotsType").Value = DBNull.Value
        End If

        If LouvreSpec.BottomPivotsPerPanel <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomPivotsPerPanel").Value = LouvreSpec.BottomPivotsPerPanel
        Else
            cmd.Parameters("@BottomPivotsPerPanel").Value = DBNull.Value
        End If

        If LouvreSpec.BottomPivotsPerPanel <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomPivotsPerPanel").Value = LouvreSpec.BottomPivotsPerPanel
        Else
            cmd.Parameters("@BottomPivotsPerPanel").Value = DBNull.Value
        End If

        If LouvreSpec.StileLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@StileLength").Value = LouvreSpec.StileLength
        Else
            cmd.Parameters("@StileLength").Value = DBNull.Value
        End If

        If LouvreSpec.StileQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@StileQuantity").Value = LouvreSpec.StileQuantity
        Else
            cmd.Parameters("@StileQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.StileHeightSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@StileHeightSubtraction").Value = LouvreSpec.StileHeightSubtraction
        Else
            cmd.Parameters("@StileHeightSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.TopRailsLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopRailsLength").Value = LouvreSpec.TopRailsLength
        Else
            cmd.Parameters("@TopRailsLength").Value = DBNull.Value
        End If

        If LouvreSpec.TopRailsQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopRailsQuantity").Value = LouvreSpec.TopRailsQuantity
        Else
            cmd.Parameters("@TopRailsQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.TopRailsWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopRailsWidthSubtraction").Value = LouvreSpec.TopRailsWidthSubtraction
        Else
            cmd.Parameters("@TopRailsWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.BottomRailsLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomRailsLength").Value = LouvreSpec.BottomRailsLength
        Else
            cmd.Parameters("@BottomRailsLength").Value = DBNull.Value
        End If

        If LouvreSpec.BottomRailsQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomRailsQuantity").Value = LouvreSpec.BottomRailsQuantity
        Else
            cmd.Parameters("@BottomRailsQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.BottomRailsWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomRailsWidthSubtraction").Value = LouvreSpec.BottomRailsWidthSubtraction
        Else
            cmd.Parameters("@BottomRailsWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.FingerGripsLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FingerGripsLength").Value = LouvreSpec.FingerGripsLength
        Else
            cmd.Parameters("@FingerGripsLength").Value = DBNull.Value
        End If

        If LouvreSpec.FingerGripQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@FingerGripQuantity").Value = LouvreSpec.FingerGripQuantity
        Else
            cmd.Parameters("@FingerGripQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.NoOfProfileSlats <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@NoOfProfileSlats").Value = LouvreSpec.NoOfProfileSlats
        Else
            cmd.Parameters("@NoOfProfileSlats").Value = DBNull.Value
        End If

        If LouvreSpec.ProfileSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@ProfileSize").Value = LouvreSpec.ProfileSize
        Else
            cmd.Parameters("@ProfileSize").Value = DBNull.Value
        End If

        If LouvreSpec.ProfileCutLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@ProfileCutLength").Value = LouvreSpec.ProfileCutLength
        Else
            cmd.Parameters("@ProfileCutLength").Value = DBNull.Value
        End If

        If LouvreSpec.ProfileCutWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@ProfileCutWidthSubtraction").Value = LouvreSpec.ProfileCutWidthSubtraction
        Else
            cmd.Parameters("@ProfileCutWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.ProfileNumberHeightSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@ProfileNumberHeightSubtraction").Value = LouvreSpec.ProfileNumberHeightSubtraction
        Else
            cmd.Parameters("@ProfileNumberHeightSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.TopFirstBladeHoleStartPoint <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopFirstBladeHoleStartPoint").Value = LouvreSpec.TopFirstBladeHoleStartPoint
        Else
            cmd.Parameters("@TopFirstBladeHoleStartPoint").Value = DBNull.Value
        End If

        If LouvreSpec.TopBladeDrillHoleSpaces <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopBladeDrillHoleSpaces").Value = LouvreSpec.TopBladeDrillHoleSpaces
        Else
            cmd.Parameters("@TopBladeDrillHoleSpaces").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleFirstBladeHoleStartPoint <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleFirstBladeHoleStartPoint").Value = LouvreSpec.MiddleFirstBladeHoleStartPoint
        Else
            cmd.Parameters("@MiddleFirstBladeHoleStartPoint").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleBladeDrillHoleSpaces <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleBladeDrillHoleSpaces").Value = LouvreSpec.MiddleBladeDrillHoleSpaces
        Else
            cmd.Parameters("@MiddleBladeDrillHoleSpaces").Value = DBNull.Value
        End If

        If LouvreSpec.BottomFirstBladeHoleStartPoint <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomFirstBladeHoleStartPoint").Value = LouvreSpec.BottomFirstBladeHoleStartPoint
        Else
            cmd.Parameters("@BottomFirstBladeHoleStartPoint").Value = DBNull.Value
        End If

        If LouvreSpec.BottomBladeDrillHoleSpaces <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomBladeDrillHoleSpaces").Value = LouvreSpec.BottomBladeDrillHoleSpaces
        Else
            cmd.Parameters("@BottomBladeDrillHoleSpaces").Value = DBNull.Value
        End If

        If LouvreSpec.InfillWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@InfillWidthSubtraction").Value = LouvreSpec.InfillWidthSubtraction
        Else
            cmd.Parameters("@InfillWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.TopInfillTopType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopInfillTopType").Value = LouvreSpec.TopInfillTopType
        Else
            cmd.Parameters("@TopInfillTopType").Value = DBNull.Value
        End If

        If LouvreSpec.TopInfillTopLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopInfillTopLength").Value = LouvreSpec.TopInfillTopLength
        Else
            cmd.Parameters("@TopInfillTopLength").Value = DBNull.Value
        End If

        If LouvreSpec.TopInfillTopQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopInfillTopQuantity").Value = LouvreSpec.TopInfillTopQuantity
        Else
            cmd.Parameters("@TopInfillTopQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.TopInfillTopSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopInfillTopSize").Value = LouvreSpec.TopInfillTopSize
        Else
            cmd.Parameters("@TopInfillTopSize").Value = DBNull.Value
        End If

        If LouvreSpec.TopInfillBottomLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopInfillBottomLength").Value = LouvreSpec.TopInfillBottomLength
        Else
            cmd.Parameters("@TopInfillBottomLength").Value = DBNull.Value
        End If

        If LouvreSpec.TopInfillBottomQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopInfillBottomQuantity").Value = LouvreSpec.TopInfillBottomQuantity
        Else
            cmd.Parameters("@TopInfillBottomQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.TopInfillBottomSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopInfillBottomSize").Value = LouvreSpec.TopInfillBottomSize
        Else
            cmd.Parameters("@TopInfillBottomSize").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleInfillTopLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleInfillTopLength").Value = LouvreSpec.MiddleInfillTopLength
        Else
            cmd.Parameters("@MiddleInfillTopLength").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleInfillTopQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleInfillTopQuantity").Value = LouvreSpec.MiddleInfillTopQuantity
        Else
            cmd.Parameters("@MiddleInfillTopQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleInfillTopSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleInfillTopSize").Value = LouvreSpec.MiddleInfillTopSize
        Else
            cmd.Parameters("@MiddleInfillTopSize").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleInfillBottomLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleInfillBottomLength").Value = LouvreSpec.MiddleInfillBottomLength
        Else
            cmd.Parameters("@MiddleInfillBottomLength").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleInfillBottomQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleInfillBottomQuantity").Value = LouvreSpec.MiddleInfillBottomQuantity
        Else
            cmd.Parameters("@MiddleInfillBottomQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleInfillBottomSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleInfillBottomSize").Value = LouvreSpec.MiddleInfillBottomSize
        Else
            cmd.Parameters("@MiddleInfillBottomSize").Value = DBNull.Value
        End If

        If LouvreSpec.BottomInfillTopLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomInfillTopLength").Value = LouvreSpec.BottomInfillTopLength
        Else
            cmd.Parameters("@BottomInfillTopLength").Value = DBNull.Value
        End If

        If LouvreSpec.BottomInfillTopQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomInfillTopQuantity").Value = LouvreSpec.BottomInfillTopQuantity
        Else
            cmd.Parameters("@BottomInfillTopQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.BottomInfillTopSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomInfillTopSize").Value = LouvreSpec.BottomInfillTopSize
        Else
            cmd.Parameters("@BottomInfillTopSize").Value = DBNull.Value
        End If

        If LouvreSpec.BottomInfillBottomLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomInfillBottomLength").Value = LouvreSpec.BottomInfillBottomLength
        Else
            cmd.Parameters("@BottomInfillBottomLength").Value = DBNull.Value
        End If

        If LouvreSpec.BottomInfillBottomQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomInfillBottomQuantity").Value = LouvreSpec.BottomInfillBottomQuantity
        Else
            cmd.Parameters("@BottomInfillBottomQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.BottomInfillBottomSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomInfillBottomSize").Value = LouvreSpec.BottomInfillBottomSize
        Else
            cmd.Parameters("@BottomInfillBottomSize").Value = DBNull.Value
        End If

        If LouvreSpec.DummyBladeTopWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@DummyBladeTopWidth").Value = LouvreSpec.DummyBladeTopWidth
        Else
            cmd.Parameters("@DummyBladeTopWidth").Value = DBNull.Value
        End If

        If LouvreSpec.DummyBladeTopWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@DummyBladeTopWidthSubtraction").Value = LouvreSpec.DummyBladeTopWidthSubtraction
        Else
            cmd.Parameters("@DummyBladeTopWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.DummyBladeBottomWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@DummyBladeBottomWidth").Value = LouvreSpec.DummyBladeBottomWidth
        Else
            cmd.Parameters("@DummyBladeBottomWidth").Value = DBNull.Value
        End If

        If LouvreSpec.DummyBladeBottomWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@DummyBladeBottomWidthSubtraction").Value = LouvreSpec.DummyBladeBottomWidthSubtraction
        Else
            cmd.Parameters("@DummyBladeBottomWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.MullionLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MullionLength").Value = LouvreSpec.MullionLength
        Else
            cmd.Parameters("@MullionLength").Value = DBNull.Value
        End If

        If LouvreSpec.MullionQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MullionQuantity").Value = LouvreSpec.MullionQuantity
        Else
            cmd.Parameters("@MullionQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.MullionWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MullionWidth").Value = LouvreSpec.MullionWidth
        Else
            cmd.Parameters("@MullionWidth").Value = DBNull.Value
        End If

        If LouvreSpec.MullionHeightSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MullionHeightSubtraction").Value = LouvreSpec.MullionHeightSubtraction
        Else
            cmd.Parameters("@MullionHeightSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.TopTrackType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopTrackType").Value = LouvreSpec.TopTrackType
        Else
            cmd.Parameters("@TopTrackType").Value = DBNull.Value
        End If

        If LouvreSpec.TopTrackSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopTrackSize").Value = LouvreSpec.TopTrackSize
        Else
            cmd.Parameters("@TopTrackSize").Value = DBNull.Value
        End If

        If LouvreSpec.TopTrackLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopTrackLength").Value = LouvreSpec.TopTrackLength
        Else
            cmd.Parameters("@TopTrackLength").Value = DBNull.Value
        End If

        If LouvreSpec.TopTrackQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopTrackQuantity").Value = LouvreSpec.TopTrackQuantity
        Else
            cmd.Parameters("@TopTrackQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.BottomTrackType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomTrackType").Value = LouvreSpec.BottomTrackType
        Else
            cmd.Parameters("@BottomTrackType").Value = DBNull.Value
        End If

        If LouvreSpec.BottomTrackSize <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomTrackSize").Value = LouvreSpec.BottomTrackSize
        Else
            cmd.Parameters("@BottomTrackSize").Value = DBNull.Value
        End If

        If LouvreSpec.BottomTrackLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomTrackLength").Value = LouvreSpec.BottomTrackLength
        Else
            cmd.Parameters("@BottomTrackLength").Value = DBNull.Value
        End If

        If LouvreSpec.BottomTrackQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomTrackQuantity").Value = LouvreSpec.BottomTrackQuantity
        Else
            cmd.Parameters("@BottomTrackQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.TopGlassHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopGlassHeight").Value = LouvreSpec.TopGlassHeight
        Else
            cmd.Parameters("@TopGlassHeight").Value = DBNull.Value
        End If

        If LouvreSpec.TopGlassWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopGlassWidth").Value = LouvreSpec.TopGlassWidth
        Else
            cmd.Parameters("@TopGlassWidth").Value = DBNull.Value
        End If

        If LouvreSpec.TopGlassType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopGlassType").Value = LouvreSpec.TopGlassType
        Else
            cmd.Parameters("@TopGlassType").Value = DBNull.Value
        End If

        If LouvreSpec.TopGlassHeightSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopGlassHeightSubtraction").Value = LouvreSpec.TopGlassHeightSubtraction
        Else
            cmd.Parameters("@TopGlassHeightSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.TopGlassHeightAddition <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopGlassHeightAddition").Value = LouvreSpec.TopGlassHeightAddition
        Else
            cmd.Parameters("@TopGlassHeightAddition").Value = DBNull.Value
        End If

        If LouvreSpec.TopGlassWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopGlassWidthSubtraction").Value = LouvreSpec.TopGlassWidthSubtraction
        Else
            cmd.Parameters("@TopGlassWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.TopGlassWidthAddition <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopGlassWidthAddition").Value = LouvreSpec.TopGlassWidthAddition
        Else
            cmd.Parameters("@TopGlassWidthAddition").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleGlassHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleGlassHeight").Value = LouvreSpec.MiddleGlassHeight
        Else
            cmd.Parameters("@MiddleGlassHeight").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleGlassWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleGlassWidth").Value = LouvreSpec.MiddleGlassWidth
        Else
            cmd.Parameters("@MiddleGlassWidth").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleGlassType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleGlassType").Value = LouvreSpec.MiddleGlassType
        Else
            cmd.Parameters("@MiddleGlassType").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleGlassHeightSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleGlassHeightSubtraction").Value = LouvreSpec.MiddleGlassHeightSubtraction
        Else
            cmd.Parameters("@MiddleGlassHeightSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleGlassHeightAddition <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleGlassHeightAddition").Value = LouvreSpec.MiddleGlassHeightAddition
        Else
            cmd.Parameters("@MiddleGlassHeightAddition").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleGlassWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleGlassWidthSubtraction").Value = LouvreSpec.MiddleGlassWidthSubtraction
        Else
            cmd.Parameters("@MiddleGlassWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleGlassWidthAddition <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleGlassWidthAddition").Value = LouvreSpec.MiddleGlassWidthAddition
        Else
            cmd.Parameters("@MiddleGlassWidthAddition").Value = DBNull.Value
        End If

        If LouvreSpec.BottomGlassHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomGlassHeight").Value = LouvreSpec.BottomGlassHeight
        Else
            cmd.Parameters("@BottomGlassHeight").Value = DBNull.Value
        End If

        If LouvreSpec.BottomGlassWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomGlassWidth").Value = LouvreSpec.BottomGlassWidth
        Else
            cmd.Parameters("@BottomGlassWidth").Value = DBNull.Value
        End If

        If LouvreSpec.BottomGlassType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomGlassType").Value = LouvreSpec.BottomGlassType
        Else
            cmd.Parameters("@BottomGlassType").Value = DBNull.Value
        End If

        If LouvreSpec.BottomGlassHeightSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomGlassHeightSubtraction").Value = LouvreSpec.BottomGlassHeightSubtraction
        Else
            cmd.Parameters("@BottomGlassHeightSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.BottomGlassHeightAddition <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomGlassHeightAddition").Value = LouvreSpec.BottomGlassHeightAddition
        Else
            cmd.Parameters("@BottomGlassHeightAddition").Value = DBNull.Value
        End If

        If LouvreSpec.BottomGlassWidthSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomGlassWidthSubtraction").Value = LouvreSpec.BottomGlassWidthSubtraction
        Else
            cmd.Parameters("@BottomGlassWidthSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.BottomGlassWidthAddition <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomGlassWidthAddition").Value = LouvreSpec.BottomGlassWidthAddition
        Else
            cmd.Parameters("@BottomGlassWidthAddition").Value = DBNull.Value
        End If

        If LouvreSpec.TopVerticalBladesHeightAddition <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopVerticalBladesHeightAddition").Value = LouvreSpec.TopVerticalBladesHeightAddition
        Else
            cmd.Parameters("@TopVerticalBladesHeightAddition").Value = DBNull.Value
        End If

        If LouvreSpec.TopVerticalBladesSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopVerticalBladesSubtraction").Value = LouvreSpec.TopVerticalBladesSubtraction
        Else
            cmd.Parameters("@TopVerticalBladesSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.TopVerticalBladesCutLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopVerticalBladesCutLength").Value = LouvreSpec.TopVerticalBladesCutLength
        Else
            cmd.Parameters("@TopVerticalBladesCutLength").Value = DBNull.Value
        End If

        If LouvreSpec.TopVerticalBladesQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopVerticalBladesQuantity").Value = LouvreSpec.TopVerticalBladesQuantity
        Else
            cmd.Parameters("@TopVerticalBladesQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleVerticalBladesHeightAddition <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleVerticalBladesHeightAddition").Value = LouvreSpec.MiddleVerticalBladesHeightAddition
        Else
            cmd.Parameters("@MiddleVerticalBladesHeightAddition").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleVerticalBladesSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleVerticalBladesSubtraction").Value = LouvreSpec.MiddleVerticalBladesSubtraction
        Else
            cmd.Parameters("@MiddleVerticalBladesSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleVerticalBladesCutLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleVerticalBladesCutLength").Value = LouvreSpec.MiddleVerticalBladesCutLength
        Else
            cmd.Parameters("@MiddleVerticalBladesCutLength").Value = DBNull.Value
        End If

        If LouvreSpec.MiddleVerticalBladesQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@MiddleVerticalBladesQuantity").Value = LouvreSpec.MiddleVerticalBladesQuantity
        Else
            cmd.Parameters("@MiddleVerticalBladesQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.BottomVerticalBladesHeightAddition <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomVerticalBladesHeightAddition").Value = LouvreSpec.BottomVerticalBladesHeightAddition
        Else
            cmd.Parameters("@BottomVerticalBladesHeightAddition").Value = DBNull.Value
        End If

        If LouvreSpec.BottomVerticalBladesSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomVerticalBladesSubtraction").Value = LouvreSpec.BottomVerticalBladesSubtraction
        Else
            cmd.Parameters("@BottomVerticalBladesSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.BottomVerticalBladesSubtraction <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomVerticalBladesSubtraction").Value = LouvreSpec.BottomVerticalBladesSubtraction
        Else
            cmd.Parameters("@BottomVerticalBladesSubtraction").Value = DBNull.Value
        End If

        If LouvreSpec.BottomVerticalBladesCutLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomVerticalBladesCutLength").Value = LouvreSpec.BottomVerticalBladesCutLength
        Else
            cmd.Parameters("@BottomVerticalBladesCutLength").Value = DBNull.Value
        End If

        If LouvreSpec.BottomVerticalBladesQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomVerticalBladesQuantity").Value = LouvreSpec.BottomVerticalBladesQuantity
        Else
            cmd.Parameters("@BottomVerticalBladesQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.KeyLocksetType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@KeyLocksetType").Value = LouvreSpec.KeyLocksetType
        Else
            cmd.Parameters("@KeyLocksetType").Value = DBNull.Value
        End If

        If LouvreSpec.KeyLocksetQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@KeyLocksetQuantity").Value = LouvreSpec.KeyLocksetQuantity
        Else
            cmd.Parameters("@KeyLocksetQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.KeyLockType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@KeyLockType").Value = LouvreSpec.KeyLockType
        Else
            cmd.Parameters("@KeyLockType").Value = DBNull.Value
        End If

        If LouvreSpec.KeyLockQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@KeyLockQuantity").Value = LouvreSpec.KeyLockQuantity
        Else
            cmd.Parameters("@KeyLockQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.KeyLockPinCylinder <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@KeyLockPinCylinder").Value = LouvreSpec.KeyLockPinCylinder
        Else
            cmd.Parameters("@KeyLockPinCylinder").Value = DBNull.Value
        End If

        If LouvreSpec.KeyLockPinCylinderQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@KeyLockPinCylinderQuantity").Value = LouvreSpec.KeyLockPinCylinderQuantity
        Else
            cmd.Parameters("@KeyLockPinCylinderQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.TopChannelType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopChannelType").Value = LouvreSpec.TopChannelType
        Else
            cmd.Parameters("@TopChannelType").Value = DBNull.Value
        End If

        If LouvreSpec.TopChannelLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopChannelLength").Value = LouvreSpec.TopChannelLength
        Else
            cmd.Parameters("@TopChannelLength").Value = DBNull.Value
        End If

        If LouvreSpec.TopChannelQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@TopChannelQuantity").Value = LouvreSpec.TopChannelQuantity
        Else
            cmd.Parameters("@TopChannelQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.BottomChannelType <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomChannelType").Value = LouvreSpec.BottomChannelType
        Else
            cmd.Parameters("@BottomChannelType").Value = DBNull.Value
        End If

        If LouvreSpec.BottomChannelLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomChannelLength").Value = LouvreSpec.BottomChannelLength
        Else
            cmd.Parameters("@BottomChannelLength").Value = DBNull.Value
        End If

        If LouvreSpec.BottomChannelQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@BottomChannelQuantity").Value = LouvreSpec.BottomChannelQuantity
        Else
            cmd.Parameters("@BottomChannelQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.SideAngleType1 <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@SideAngleType1").Value = LouvreSpec.SideAngleType1
        Else
            cmd.Parameters("@SideAngleType1").Value = DBNull.Value
        End If

        If LouvreSpec.SideAngleLength1 <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@SideAngleLength1").Value = LouvreSpec.SideAngleLength1
        Else
            cmd.Parameters("@SideAngleLength1").Value = DBNull.Value
        End If

        If LouvreSpec.SideAngleQuantity1 <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@SideAngleQuantity1").Value = LouvreSpec.SideAngleQuantity1
        Else
            cmd.Parameters("@SideAngleQuantity1").Value = DBNull.Value
        End If

        If LouvreSpec.SideAngleType2 <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@SideAngleType2").Value = LouvreSpec.SideAngleType2
        Else
            cmd.Parameters("@SideAngleType2").Value = DBNull.Value
        End If

        If LouvreSpec.SideAngleLength2 <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@SideAngleLength2").Value = LouvreSpec.SideAngleLength2
        Else
            cmd.Parameters("@SideAngleLength2").Value = DBNull.Value
        End If

        If LouvreSpec.SideAngleQuantity2 <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@SideAngleQuantity2").Value = LouvreSpec.SideAngleQuantity2
        Else
            cmd.Parameters("@SideAngleQuantity2").Value = DBNull.Value
        End If

        If LouvreSpec.HSectionLength <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@HSectionLength").Value = LouvreSpec.HSectionLength
        Else
            cmd.Parameters("@HSectionLength").Value = DBNull.Value
        End If

        If LouvreSpec.HSectionQuantity <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@HSectionQuantity").Value = LouvreSpec.HSectionQuantity
        Else
            cmd.Parameters("@HSectionQuantity").Value = DBNull.Value
        End If

        If LouvreSpec.PackupLengthAdditionHeight <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PackupLengthAdditionHeight").Value = LouvreSpec.PackupLengthAdditionHeight
        Else
            cmd.Parameters("@PackupLengthAdditionHeight").Value = DBNull.Value
        End If

        If LouvreSpec.PackupLengthAdditionWidth <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@PackupLengthAdditionWidth").Value = LouvreSpec.PackupLengthAdditionWidth
        Else
            cmd.Parameters("@PackupLengthAdditionWidth").Value = DBNull.Value
        End If

    End Sub

    Function GetLouvreSpecDesignRecordByLouvreDetailsID(intLouvreDetailsID As Integer, Optional cnn As SqlConnection = Nothing, Optional ByRef trans As SqlTransaction = Nothing) As DataTable
        Dim adp As New SqlDataAdapter
        Dim dt As New DataTable
        Dim bolAddOK As Boolean = True

        If IsNothing(cnn) Then
            bolAddOK = False
            Dim dbConn As New DBConnection
            cnn = dbConn.getSQLConnection_To_OzRollPlantationScheduling
            dbConn = Nothing
        End If

        Dim cmd As New SqlCommand
        Try

            If bolAddOK = False Then
                cnn.Open()
            End If

            cmd.Connection = cnn
            cmd.CommandText = "select * from dbo.tblLouvreSpecDesign where LouvreDetailsID = " & intLouvreDetailsID.ToString
            cmd.CommandType = CommandType.Text


            If bolAddOK = True Then
                cmd.Transaction = trans
            End If

            adp.SelectCommand = cmd
            adp.Fill(dt)

            If bolAddOK = False Then
                cnn.Close()
            End If

        Catch ex As Exception
            EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & ex.Message & Environment.NewLine)
            bolAddOK = False
        Finally
            cmd.Dispose()
            cmd = Nothing
            If bolAddOK = False Then
                cnn.Dispose()
                cnn = Nothing
            End If
        End Try
        Return dt
    End Function

    Function GetLouvreSpecDesignRecord(ByVal LouvreDetails As LouvreSpecDesign, VariableName As String, VarValue As String, Optional VarType As String = "string", Optional cnn As SqlConnection = Nothing, Optional ByRef trans As SqlTransaction = Nothing) As DataTable
        Dim adp As New SqlDataAdapter
        Dim dt As New DataTable
        Dim bolAddOK As Boolean = True, SaveRecord As Boolean = False, SqlStr As String = ""
        If IsNothing(cnn) Then
            bolAddOK = False
            Dim dbConn As New DBConnection
            cnn = dbConn.getSQLConnection_To_OzRollPlantationScheduling
            dbConn = Nothing
        End If

        Dim cmd As New SqlCommand
        Try

            If bolAddOK = False Then
                cnn.Open()
            End If

            SqlStr = "  Select * from  LouvreSpecDesign where "
            SqlStr += VariableName + IIf(VarType = "string", "='", "=") + VarValue + IIf(VarType = "string", "'", "")

            cmd.Connection = cnn
            cmd.CommandText = SqlStr
            cmd.CommandType = CommandType.Text


            If bolAddOK = True Then
                cmd.Transaction = trans
            End If

            adp.SelectCommand = cmd
            adp.Fill(dt)

            If bolAddOK = False Then
                cnn.Close()
            End If

        Catch ex As Exception
            EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & ex.Message & Environment.NewLine)
            bolAddOK = False
        Finally
            cmd.Dispose()
            cmd = Nothing
            If bolAddOK = False Then
                cnn.Dispose()
                cnn = Nothing
            End If
        End Try
        Return dt
    End Function

    Function ConvertRcdToLouvreSpecDesign(ByVal dwLouvreSpecDesigTBL As DataRow) As LouvreSpecDesign
        Dim clsLouvreSpecDesign As New LouvreSpecDesign

        Dim _type As Type = clsLouvreSpecDesign.GetType()
        Dim properties() As PropertyInfo = _type.GetProperties()
        Dim tblName = dwLouvreSpecDesigTBL.Table.Columns

        For Each _property As PropertyInfo In properties
            If IsDBNull(dwLouvreSpecDesigTBL(_property.Name)) Then
                _property.SetValue(tblName, dwLouvreSpecDesigTBL(_property.Name), Nothing)
            End If
        Next

        ' go through each column
        Dim p As PropertyInfo
        For Each _col As DataColumn In dwLouvreSpecDesigTBL.Table.Columns
            ' find the property for the column
            p = tblName.[GetType]().GetProperty(_col.ColumnName)

            ' if exists, set the value
            If p IsNot Nothing AndAlso dwLouvreSpecDesigTBL(_col) <> DBNull.Value Then
                p.SetValue(tblName, dwLouvreSpecDesigTBL(_col), Nothing)
            End If
        Next

        Return clsLouvreSpecDesign

    End Function

End Class
