Imports Microsoft.VisualBasic
Imports System.Data.SqlClient

Public Class DeliveryInstructionsDAO
    ''' <summary>
    ''' Gets the delivery instructions for the given address ID from the tblDeliveryInstructions database table.
    ''' </summary>
    ''' <param name="intAddressID">The ID of the address to get delivery instruction records for.</param>
    ''' <returns>A <see cref="DataTable"/> representing the database table.</returns>
    Function getDeliveryInstructionsByAddressID(ByVal intAddressID As Integer) As DataTable

        Dim dbConn As New DBConnection
        Dim cnn As SqlConnection = dbConn.getSQLConnection_To_OzRollPlantationScheduling
        Dim cmd As New SqlCommand
        Dim adp As New SqlDataAdapter
        Dim dt As New DataTable

        Try
            cnn.Open()
            cmd.Connection = cnn
            cmd.CommandText = "sp_getDeliveryInstructionsByAddressID"
            cmd.CommandType = CommandType.StoredProcedure
            SqlCommandBuilder.DeriveParameters(cmd)
            cmd.Parameters("@AddressID").Value = intAddressID

            adp.SelectCommand = cmd
            adp.Fill(dt)

        Catch ex As Exception
            EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & ex.Message & Environment.NewLine)
        Finally
            adp.Dispose()
            adp = Nothing
            cmd.Dispose()
            cmd = Nothing
            cnn.Close()
            cnn.Dispose()
            cnn = Nothing
        End Try

        Return dt

    End Function

    ''' <summary>
    ''' Adds a new delivery instruction record to the tblDeliveryInstructions database table.
    ''' </summary>
    ''' <param name="dDeliveryInstruction">The <see cref="DeliveryInstruction"/> object to add to the database.</param>
    ''' <param name="cnn">The <see cref="SqlConnection"/> object.</param>
    ''' <param name="trans">The <see cref="SqlTransaction"/> object.</param>
    ''' <returns>The ID of the new delivery instruction record in the database.</returns>
    Function addDeliveryInstructionRecord(dDeliveryInstruction As DeliveryInstruction, Optional cnn As SqlConnection = Nothing, Optional ByRef trans As SqlTransaction = Nothing) As Integer

        Dim bolAddOK As Boolean = True
        Dim SaveRecord As Boolean = False
        Dim cmd As New SqlCommand

        If IsNothing(cnn) Then
            bolAddOK = False
            Dim dbConn As New DBConnection
            cnn = dbConn.getSQLConnection_To_OzRollPlantationScheduling
            dbConn = Nothing
        End If

        Try
            If bolAddOK = False Then
                cnn.Open()
            End If

            cmd.Connection = cnn
            cmd.CommandText = "sp_addDeliveryInstruction"
            cmd.CommandType = CommandType.StoredProcedure

            If bolAddOK = True Then
                cmd.Transaction = trans
            End If

            setupCommandParameters(dDeliveryInstruction, cmd)

            Dim ra As Integer = cmd.ExecuteNonQuery

            If ra < 1 Then
                EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - add record failed" & Environment.NewLine)
                bolAddOK = False
            Else
                SaveRecord = True
            End If

            If bolAddOK = False Then
                cnn.Close()
            End If

        Catch ex As Exception
            EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & ex.Message & Environment.NewLine)
            bolAddOK = False
        Finally
            cmd.Dispose()
            cmd = Nothing
            If bolAddOK = False Then
                cnn.Dispose()
                cnn = Nothing
            End If
        End Try

        Return SaveRecord
    End Function

    ''' <summary>
    ''' Setup the command parameters for the given delivery instruction.
    ''' </summary>
    ''' <param name="dDeliveryInstruction">The <see cref="DeliveryInstruction"/> to use to configure the command parameters.</param>
    ''' <param name="cmd">The <see cref="SqlCommand"/> object to configure.</param>
    Protected Sub setupCommandParameters(dDeliveryInstruction As DeliveryInstruction, ByRef cmd As SqlCommand)

        SqlCommandBuilder.DeriveParameters(cmd)

        If dDeliveryInstruction.AddressID <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@AddressID").Value = dDeliveryInstruction.AddressID
        Else
            cmd.Parameters("@AddressID").Value = DBNull.Value
        End If

        If dDeliveryInstruction.AddressID <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@AddressID").Value = dDeliveryInstruction.AddressID
        Else
            cmd.Parameters("@AddressID").Value = DBNull.Value
        End If

        If dDeliveryInstruction.InstructionText <> String.Empty Then
            cmd.Parameters("@InstructionText").Value = dDeliveryInstruction.InstructionText
        Else
            cmd.Parameters("@InstructionText").Value = DBNull.Value
        End If

        If dDeliveryInstruction.CreationDateTime <> Constants.DEFAULT_DATE_VALUE Then
            cmd.Parameters("@CreationDateTime").Value = dDeliveryInstruction.CreationDateTime
        Else
            cmd.Parameters("@CreationDateTime").Value = DBNull.Value
        End If

        If dDeliveryInstruction.UserID <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@UserID").Value = dDeliveryInstruction.UserID
        Else
            cmd.Parameters("@UserID").Value = DBNull.Value
        End If

    End Sub
End Class
