
Partial Class JobStockUsage
    Inherits System.Web.UI.Page

    Private Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load

        If Not IsPostBack Then



            'If Not Request.QueryString.Count = 0 Then
            '    If Not IsNothing(Request.Params("ScheduleId")) Then
            '        intScheduleId = CInt(Request.Params("ScheduleId"))
            '    End If
            'End If

            'Me.txtId.Text = intScheduleId.ToString
            Dim service As New AppService
            'Extrusion
            Dim dt As DataTable = service.getJobStockUsageByID(44, 1)
            Me.dgvExtrusions.DataSource = dt
            Me.dgvExtrusions.DataBind()

            'Hardware
            Dim dt1 As DataTable = service.getJobStockUsageByID(44, 2)
            Me.dgvHardware.DataSource = dt1
            Me.dgvHardware.DataBind()
            service = Nothing

            'loadExtrusionsList()

            'loadHardwareList()



        End If



    End Sub

    Private Sub Page_Error(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Error
        Dim objErr1 As Exception = Server.GetLastError().GetBaseException()

        Dim strErrorMessage As String = String.Empty

        strErrorMessage &= "Error In: " & Request.Url.ToString() & Environment.NewLine & Environment.NewLine

        strErrorMessage &= "Server.GetLastError().GetBaseException()" & Environment.NewLine & Environment.NewLine

        strErrorMessage &= "Error Message: " & objErr1.Message & Environment.NewLine
        strErrorMessage &= "Stack Trace:" & Environment.NewLine
        strErrorMessage &= objErr1.StackTrace & Environment.NewLine & Environment.NewLine

        Dim objErr2 As Exception = Server.GetLastError()

        strErrorMessage &= "Server.GetLastError()" & Environment.NewLine & Environment.NewLine

        strErrorMessage &= "Error Message: " & objErr2.Message & Environment.NewLine
        strErrorMessage &= "Stack Trace:" & Environment.NewLine
        strErrorMessage &= objErr2.StackTrace & Environment.NewLine

        EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & strErrorMessage)

        Server.ClearError()

        Response.Redirect("GenericErrorPage.aspx", False)
    End Sub

    Private Function getPageInfo() As String

        Dim strPageInfo As String = String.Empty

        Dim strName As String = String.Empty
        If Session.Contents.Count > 0 Then
            strPageInfo &= "Session Variables" & Environment.NewLine
            For Each strName In Session.Contents
                strPageInfo &= strName & ": " & CStr(Session.Contents(strName)) & Environment.NewLine
            Next
        Else
            strPageInfo &= "No Session Variables" & Environment.NewLine
        End If

        strPageInfo &= Environment.NewLine

        If Me.HasControls Then
            strPageInfo &= "Form Controls" & Environment.NewLine
            getPageControls(Me, strPageInfo)
        Else
            strPageInfo &= "No Form Controls" & Environment.NewLine
        End If
        Return strPageInfo

    End Function

    Private Sub getPageControls(ByVal ctrl As Control, ByRef strPageControls As String)

        If ctrl.HasControls Then
            For Each childCtrl As Control In ctrl.Controls
                getPageControls(childCtrl, strPageControls)
            Next
        Else
            Select Case ctrl.GetType.Name
                Case "TextBox"
                    Dim frmTxt As TextBox
                    frmTxt = DirectCast(ctrl, TextBox)
                    strPageControls &= frmTxt.ID & ": " & Left(frmTxt.Text, 100) & Environment.NewLine
                Case "DropDownList"
                    Dim frmCbo As DropDownList
                    frmCbo = DirectCast(ctrl, DropDownList)
                    If frmCbo.Items.Count > 0 Then
                        strPageControls &= frmCbo.ID & ": " & frmCbo.SelectedItem.Text & " (" & frmCbo.SelectedValue & ")" & Environment.NewLine
                    Else
                        strPageControls &= frmCbo.ID & ": Not Populated" & Environment.NewLine
                    End If
                Case "CheckBox"
                    Dim frmChk As CheckBox
                    frmChk = DirectCast(ctrl, CheckBox)
                    strPageControls &= frmChk.ID & ": " & frmChk.Checked & Environment.NewLine
                Case "RadioButton"
                    Dim frmRdo As RadioButton
                    frmRdo = DirectCast(ctrl, RadioButton)
                    strPageControls &= frmRdo.ID & ": " & frmRdo.Checked & Environment.NewLine
                Case "RadioButtonList"
                    Dim frmRdoLst As RadioButtonList
                    frmRdoLst = DirectCast(ctrl, RadioButtonList)
                    If frmRdoLst.SelectedIndex >= 0 Then
                        strPageControls &= frmRdoLst.ID & ": " & frmRdoLst.SelectedItem.Text & " (" & frmRdoLst.SelectedValue & ")" & Environment.NewLine
                    Else
                        strPageControls &= frmRdoLst.ID & ": Not Selected" & Environment.NewLine
                    End If
            End Select
        End If

    End Sub

    Protected Sub btnLogout_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnLogout.Click

        Response.Redirect("Logout.aspx", False)

    End Sub

    Protected Sub loadExtrusionsList()

        Dim service As New AppService
        'Dim dt As DataTable = service.runSQLScheduling("select dbo.tblStockUsage.*, dbo.tblStockArticles.Description from dbo.tblStockUsage inner join dbo.tblStockArticles on dbo.tblStockUsage.StockArticleID = dbo.tblStockArticles.StockArticleID where StockArticleTypeID=1 ScheduleID=" & Me.txtId.Text)
        Dim dt As DataTable = New DataTable
        Dim col As DataColumn = New DataColumn
        col.ColumnName = "StockUsageID"
        col.DataType = System.Type.GetType("System.Int32")
        dt.Columns.Add(col)

        col = New DataColumn
        col.ColumnName = "Description"
        col.DataType = System.Type.GetType("System.String")
        dt.Columns.Add(col)

        col = New DataColumn
        col.ColumnName = "Quantity"
        col.DataType = System.Type.GetType("System.Decimal")
        dt.Columns.Add(col)

        Dim dRow As DataRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Bottom Track 28mm (2900)"
        dRow(2) = "1"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "DLi 20mm Trim Infill (3650)"
        dRow(2) = "1"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "DLi 35mm Trim Infill (3650)"
        dRow(2) = "1"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "DLi Blade Infill (6500)"
        dRow(2) = "1"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "DLi Rail (6500)"
        dRow(2) = "1"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "DLi Stile (6500)"
        dRow(2) = "2"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "DLi Top Track (3250)"
        dRow(2) = "1"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Finger Grip T2012 (Angle) (6500)"
        dRow(2) = "2"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "SC90 Profile 94.SC100-05MF Fluted (5800)"
        dRow(2) = "6"
        dt.Rows.Add(dRow)

        Me.dgvExtrusions.DataSource = dt
        Me.dgvExtrusions.DataBind()

        service = Nothing

    End Sub

    Protected Sub loadHardwareList()

        Dim service As New AppService
        'Dim dt As DataTable = service.runSQLScheduling("select dbo.tblStockUsage.*, dbo.tblStockArticles.Description from dbo.tblStockUsage inner join dbo.tblStockArticles on dbo.tblStockUsage.StockArticleID = dbo.tblStockArticles.StockArticleID where StockArticleTypeID=2 ScheduleID=" & Me.txtId.Text)

        Dim dt As DataTable = New DataTable
        Dim col As DataColumn = New DataColumn
        col.ColumnName = "StockUsageID"
        col.DataType = System.Type.GetType("System.Int32")
        dt.Columns.Add(col)

        col = New DataColumn
        col.ColumnName = "Description"
        col.DataType = System.Type.GetType("System.String")
        dt.Columns.Add(col)

        col = New DataColumn
        col.ColumnName = "Quantity"
        col.DataType = System.Type.GetType("System.Decimal")
        dt.Columns.Add(col)

        Dim dRow As DataRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Factory Fixings as dollar amount GL 266.17.01.3"
        dRow(2) = "30"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "P5 Pile 4.8 x 5mm 94.59-10 Black"
        dRow(2) = "34"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Lockset Entrance Furniture SC Edge - SC110-44"
        dRow(2) = "1"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "P16 Pile 4.8 x 16mm 94.59-04 Black"
        dRow(2) = "8"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "70mm Lock Barrel - 94.SC110-46"
        dRow(2) = "1"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Dli End Plug 94.Di120-12 BLK"
        dRow(2) = "12"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Clips -Black - 94.SC110 - 77BLK"
        dRow(2) = "65"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Blade Lock SC110-50"
        dRow(2) = "6"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Flush Bolt Satin Chrome SC110-90SC"
        dRow(2) = "2"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Lock Two Point Lock Body - 94.SC110-45"
        dRow(2) = "1"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Top Pivot Assembly SC110-70"
        dRow(2) = "2"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Bottom Pivot 28mm Track SC110-72"
        dRow(2) = "2"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "P75 Pile 4.8 x 7.5mm 94.59-03 Black"
        dRow(2) = "8"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Dli Hinges - Satin Chrome Di120-08SC"
        dRow(2) = "8"
        dt.Rows.Add(dRow)
        dRow = Nothing

        dRow = dt.NewRow
        dRow(0) = "0"
        dRow(1) = "Hole Plug 10mm Black 12.220.415"
        dRow(2) = "36"
        dt.Rows.Add(dRow)
        dRow = Nothing

        Me.dgvHardware.DataSource = dt
        Me.dgvHardware.DataBind()

        service = Nothing

    End Sub

    Protected Function updateBookedOutBy(dt As DataTable) As DataTable

        Dim col As DataColumn = New DataColumn
        col.ColumnName = "BookedOutBy"
        col.DataType = System.Type.GetType("System.String")
        dt.Columns.Add(col)

        Dim service As New AppService
        Dim dtUser As DataTable = service.getUsers

        For i As Integer = 0 To dt.Rows.Count - 1
            Dim drow() As DataRow = dtUser.Select("UserID=" & dt.Rows(i)("BookedOutByID").ToString)
            If drow.Length > 0 Then
                dt.Rows(i)("BookedOutBy") = drow(0)("UserName")
            End If
            drow = Nothing
        Next

        dtUser.Dispose()
        dtUser = Nothing
        service = Nothing

        Return dt

    End Function


End Class
