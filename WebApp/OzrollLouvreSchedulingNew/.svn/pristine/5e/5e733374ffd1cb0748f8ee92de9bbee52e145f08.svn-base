Imports Microsoft.VisualBasic
Imports System.Data.SqlClient

Public Class LouvreStyleDAO

    Public Function getLouvreStyleRecordByID(ByVal intID As Integer) As DataTable

        Dim dbConn As New DBConnection
        Dim cnn As SqlConnection = dbConn.getSQLConnection_To_OzRollPlantationScheduling
        Dim cmd As New SqlCommand
        Dim adp As New SqlDataAdapter
        Dim dt As New DataTable
        Try
            cnn.Open()
            cmd.Connection = cnn
            cmd.CommandText = "sp_getLouvreStyleByID"
            cmd.CommandType = CommandType.StoredProcedure
            SqlCommandBuilder.DeriveParameters(cmd)
            cmd.Parameters("@StyleID").Value = intID

            adp.SelectCommand = cmd
            adp.Fill(dt)

        Catch ex As Exception
            EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & ex.Message & Environment.NewLine)
        Finally
            adp.Dispose()
            adp = Nothing
            cmd.Dispose()
            cmd = Nothing
            cnn.Close()
            cnn.Dispose()
            cnn = Nothing
        End Try

        Return dt

    End Function

    Public Function getLouvreStyleRecords() As DataTable

        Dim dbConn As New DBConnection
        Dim cnn As SqlConnection = dbConn.getSQLConnection_To_OzRollPlantationScheduling
        Dim cmd As New SqlCommand
        Dim adp As New SqlDataAdapter
        Dim dt As New DataTable
        Try
            cnn.Open()
            cmd.Connection = cnn
            cmd.CommandText = "sp_getLouvreStyles"
            cmd.CommandType = CommandType.StoredProcedure
            SqlCommandBuilder.DeriveParameters(cmd)

            adp.SelectCommand = cmd
            adp.Fill(dt)

        Catch ex As Exception
            EventLog.addEventLogEmail(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType.Name & ": " & System.Reflection.MethodBase.GetCurrentMethod().Name & " - " & ex.Message & Environment.NewLine)
        Finally
            adp.Dispose()
            adp = Nothing
            cmd.Dispose()
            cmd = Nothing
            cnn.Close()
            cnn.Dispose()
            cnn = Nothing
        End Try

        Return dt

    End Function

    Public Function getLouvreStyleByID(intID As Integer) As LouvreStyle
        Dim cLouvreStyle As New LouvreStyle
        Dim dt As DataTable = getLouvreStyleRecordByID(intID)

        For Each r As DataRow In dt.Rows
            cLouvreStyle.ID = CInt(r("StyleID"))
            cLouvreStyle.Name = r("StyleName").ToString()

            If Not IsDBNull(r("SortOrder")) Then
                cLouvreStyle.SortOrder = CInt(r("SortOrder"))
            End If

            If Not IsDBNull(r("Discontinued")) Then
                cLouvreStyle.Discontinued = CBool(r("Discontinued"))
            End If
        Next

        Return cLouvreStyle
    End Function

    Public Function getLouvreStyles() As List(Of LouvreStyle)
        Dim lLouvreStyles As New List(Of LouvreStyle)
        Dim dt As DataTable = getLouvreStyleRecords()

        For Each r As DataRow In dt.Rows
            Dim cLouvreStyle As New LouvreStyle

            With cLouvreStyle
                .ID = CInt(r("StyleID"))
                .Name = r("StyleName").ToString()

                If Not IsDBNull(r("SortOrder")) Then
                    .SortOrder = CInt(r("SortOrder"))
                End If

                If Not IsDBNull(r("Discontinued")) Then
                    .Discontinued = CBool(r("Discontinued"))
                End If
            End With

            lLouvreStyles.Add(cLouvreStyle)
        Next

        Return lLouvreStyles
    End Function

    Private Sub setupCommandParameters(ByRef cmd As SqlCommand, cLouvreStyle As LouvreStyle, bolAdd As Boolean)

        SqlCommandBuilder.DeriveParameters(cmd)

        If bolAdd Then
            cmd.Parameters("@StyleID").Direction = ParameterDirection.Output
        Else
            If cLouvreStyle.ID <> Constants.DEFAULT_INTEGER_VALUE Then
                cmd.Parameters("@StyleID").Value = cLouvreStyle.ID
            Else
                cmd.Parameters("@StyleID").Value = DBNull.Value
            End If
        End If

        If cLouvreStyle.Name <> String.Empty Then
            cmd.Parameters("@StyleName").Value = cLouvreStyle.Name
        Else
            cmd.Parameters("@StyleName").Value = DBNull.Value
        End If

        If cLouvreStyle.SortOrder <> Constants.DEFAULT_INTEGER_VALUE Then
            cmd.Parameters("@SortOrder").Value = cLouvreStyle.SortOrder
        Else
            cmd.Parameters("@SortOrder").Value = DBNull.Value
        End If

        If cLouvreStyle.Discontinued <> Constants.DEFAULT_BOOLEAN_VALUE Then
            cmd.Parameters("@Discontinued").Value = cLouvreStyle.Discontinued
        Else
            cmd.Parameters("@Discontinued").Value = DBNull.Value
        End If

    End Sub
End Class
